// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  name           String?
  email          String   @unique
  password       String?
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  role      Role     @default(STUDENT) 
  // Relations
  courses   Course[] 
  enrollments   Enrollment[]

}

model Course {
  id          String   @id @default(cuid())
  title       String
  description String
  thumbnail   String
  featured    Boolean  @default(false)
  duration    String   @default("6 weeks")        
  price       Float    @default(0)                // 0 = Free
  rating      Float    @default(4.5)              // Average rating
  studentsCount Int    @default(0)                
  level       Level    @default(BEGINNER)         // Course difficulty
  createdAt   DateTime @default(now())
 // Relations
  creator     User?    @relation(fields: [creatorId], references: [id])
  creatorId   String?
  enrollments Enrollment[]

}
model Enrollment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  
  // Relations
  user      User   @relation(fields: [userId], references: [id])
  userId    String
  course    Course @relation(fields: [courseId], references: [id])
  courseId  String

  @@unique([userId, courseId]) // Prevent duplicate enrollments
}

enum Role {
  ADMIN
  STUDENT
}
enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}
